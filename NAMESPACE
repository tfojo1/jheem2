# Generated by roxygen2: do not edit by hand

S3method("$<-",ontology)
S3method("[",ontology)
S3method("[<-",ontology)
S3method("[[<-",ontology)
S3method("names<-",ontology)
S3method(as.list,ontology)
S3method(diff,target.populations)
S3method(incomplete.dimensions,ontology)
S3method(is_complete,ontology)
S3method(print,ontology)
S3method(subset,data)
S3method(subset,simset)
S3method(update,outcome.keep.dimensions)
export("array.access<-")
export(FUNCTIONAL.FORM)
export(JHEEM.INTERVENTION)
export(STATIC.FUNCTIONAL.FORM)
export(anchor.intervention.effect.location.and.version)
export(apply.ontology.mapping)
export(array.access)
export(as.ontology)
export(assemble.mcmc.from.calibration)
export(assemble.simulations.from.calibration)
export(burn.simset)
export(clear.all.managers)
export(clear.calibration.cache)
export(clear.calibrations)
export(clear.interventions)
export(clear.ontology.error.debug.info)
export(clear.ontology.mappings)
export(clear.versions)
export(collapse.array.according.to.indices)
export(combine.ontology.mappings)
export(compute.likelihood)
export(compute.likelihood.piecewise)
export(copy.calibration.info)
export(copy.data.manager)
export(copy.simulation.set)
export(create.basic.likelihood.instructions)
export(create.basic.likelihood.instructions.with.included.multiplier)
export(create.basic.likelihood.instructions.with.specified.outcome)
export(create.basic.ratio.likelihood.instructions)
export(create.bernoulli.likelihood.instructions)
export(create.criteria.based.intervention)
export(create.custom.likelihood.instructions)
export(create.data.manager)
export(create.ifelse.likelihood.instructions)
export(create.intervention)
export(create.intervention.criterion)
export(create.intervention.effect)
export(create.jheem.engine)
export(create.jheem.specification)
export(create.likelihood.weights)
export(create.linear.functional.form)
export(create.linear.spline.functional.form)
export(create.location.based.ifelse.likelihood.instructions)
export(create.log.linear.functional.form)
export(create.logistic.linear.functional.form)
export(create.logistic.spline.functional.form)
export(create.logistic.tail.functional.form)
export(create.model.foreground)
export(create.monotonic.criteria.based.intervention)
export(create.monotonic.criterion)
export(create.natural.spline.functional.form)
export(create.nested.proportion.likelihood.instructions)
export(create.nested.proportion.likelihood.instructions.with.included.multiplier)
export(create.ontology.mapping)
export(create.other.catchall.ontology.mapping)
export(create.outcome.metadata)
export(create.simset.collection)
export(create.static.functional.form)
export(create.style.manager)
export(create.target.population)
export(create.time.lagged.comparison.likelihood.instructions)
export(create.time.lagged.comparison.likelihood.instructions.with.included.multiplier)
export(create.time.lagged.comparison.nested.proportion.likelihood.instructions)
export(examine.get.mappings.to.align.ontologies)
export(examine.get.ontology.mapping)
export(examine.recent.failed.ontology.mapping)
export(execute.simplot)
export(expand.array)
export(extract.last.simulation.from.calibration)
export(fast.array.access)
export(get.age.bracket.mapping)
export(get.collapse.array.indices)
export(get.cumulative.age.counts.smoother)
export(get.data.outcome.descriptions)
export(get.data.outcome.labels)
export(get.data.outcome.pretty.names)
export(get.data.source.full.names)
export(get.data.source.short.names)
export(get.default.data.manager)
export(get.default.style.manager)
export(get.depends.on.functions)
export(get.every.combination)
export(get.expand.array.indices)
export(get.identity.ontology.mapping)
export(get.intervention)
export(get.jheem.root.directory)
export(get.locations.with.data)
export(get.mappings.to.align.ontologies)
export(get.mcmc.mixing.statistic)
export(get.ontology.error.debug.info)
export(get.ontology.mapping)
export(get.ontology.mapping.matrix)
export(get.p.bias.estimates)
export(get.prior.versions)
export(get.registered.ontology)
export(get.simset.data)
export(get.simset.filename)
export(get.simset.filename.and.dir)
export(get.simset.params)
export(get.simulation.metadata)
export(get.specification.for.version)
export(get.specification.metadata)
export(get.year.bounds.for.outcome)
export(import.data)
export(incomplete.dimensions)
export(instantiate.likelihood)
export(interpolate)
export(intersect.target.populations)
export(is.no.intervention)
export(is.ontology)
export(is_complete)
export(join.interventions)
export(join.likelihood.instructions)
export(load.data.manager)
export(load.simulation.set)
export(make.age.strata.names)
export(map.value.ontology)
export(mcmc.traceplot)
export(ontology)
export(parse.age.strata.names)
export(parse.simset.filename)
export(parse.year.names)
export(percentage.cache.complete)
export(prepare.plot)
export(pull.data)
export(put.data)
export(put.data.long.form)
export(register.aging)
export(register.calibrated.parameters.for.version)
export(register.calibration.info)
export(register.data.ontology)
export(register.data.outcome)
export(register.data.source)
export(register.fixed.model.strata)
export(register.initial.population)
export(register.model.element)
export(register.model.element.values)
export(register.model.foreground)
export(register.model.quantity)
export(register.model.quantity.subset)
export(register.model.specification)
export(register.mortality)
export(register.natality)
export(register.ontology.mapping)
export(register.parent.data.source)
export(register.remission)
export(register.sampled.parameters.for.version)
export(register.transition)
export(register.transmission)
export(rerun.simulations)
export(resolve.ontology.dimension.values)
export(restratify.age.counts)
export(run.calibration)
export(run.simulations.from.parameters)
export(save.simulation.set)
export(set.default.data.manager)
export(set.default.style.manager)
export(set.element.functional.form.alphas.from.parameters)
export(set.element.functional.form.from.time)
export(set.element.functional.form.future.slope)
export(set.element.functional.form.future.slope.after.time)
export(set.element.functional.form.interaction.alphas)
export(set.element.functional.form.main.effect.alphas)
export(set.element.functional.form.to.time)
export(set.element.ramp.times)
export(set.element.ramp.values)
export(set.element.taper.times)
export(set.element.taper.values)
export(set.element.value)
export(set.jheem.root.directory)
export(set.up.calibration)
export(simplot)
export(simplot.data.only)
export(standardize.age.strata.names)
export(thin.simset)
export(track.cumulative.outcome)
export(track.cumulative.proportion.from.rate)
export(track.dynamic.outcome)
export(track.integrated.outcome)
export(track.point.outcome)
export(track.transition)
export(union.target.populations)
import(Rcpp)
import(deSolve)
import(locations)
useDynLib(jheem2, .registration = TRUE)
